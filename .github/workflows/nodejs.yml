# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow integrates njsscan with GitHub's Code Scanning feature
# nodejsscan is a static security code scanner that finds insecure code patterns in your Node.js applications

name: njsscan sarif

on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]

jobs:
  build:
    # định nghĩa môi trường mà job sẽ chạy
    # Remove folder node43 nếu folder đó đã tồn tại
    runs-on: self-hosted
    steps:
      - name: Clone source code from GitHub
        run: |
          if [ ! -d "node43_ci_cd" ]; then
            echo "Folder node43_ci_cd does not exist. Cloning repository..."
            git clone https://github.com/DuyPhuongkhtn/node43_ci_cd.git
          else
            echo "Folder node43_ci_cd exists. Pulling latest changes..."
            cd node43_ci_cd
            git pull origin main
          fi
      - name: Build MySQL
        run: |
          cd node43_ci_cd/.github/workflows
          sudo chmod +x ./build_mysql.sh
          ./build_mysql.sh
      - name: Build Docker image and create container for source BE
        run: |
          # Điều hướng vào thư mục dự án
          cd node43_ci_cd

          # Dừng và xóa container đã tồn tại nếu có
          if [ "$(sudo docker ps -q -f name=node43)" ]; then
              echo "Stopping and removing existing container..."
              sudo docker stop node43
              sudo docker rm node43
          fi

          # Xóa image cũ nếu có
          if [ "$(sudo docker images -q node43)" ]; then
              echo "Removing existing image..."
              sudo docker rmi node43
          fi

          # Build image mới
          echo "Building new Docker image..."
          sudo docker build -t node43 .

          # Tạo container mới từ image
          echo "Creating new container..."
          sudo docker run -d -p 8080:8080 --name node43 node43

          echo "Docker container 'node43' is up and running."

