# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow integrates njsscan with GitHub's Code Scanning feature
# nodejsscan is a static security code scanner that finds insecure code patterns in your Node.js applications

name: njsscan sarif

on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]

jobs:
  build:
    # định nghĩa môi trường mà job sẽ chạy
    # Remove folder node43 nếu folder đó đã tồn tại
    runs-on: self-hosted
    steps:
      - name: Clone source code from GitHub
        run: |
          if [ ! -d "node43_ci_cd" ]; then
            echo "Folder node43_ci_cd does not exist. Cloning repository..."
            git clone https://github.com/DuyPhuongkhtn/node43_ci_cd.git
          else
            echo "Folder node43_ci_cd exists. Pulling latest changes..."
            cd node43_ci_cd
            git checkout .
            git pull origin main
          fi
      - name: Build MySQL
        run: |
          cd node43_ci_cd/.github/workflows
          sudo chmod +x ./build_mysql.sh
          ./build_mysql.sh
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
      - name: Set up MySQL
        run: |
          echo "Waiting for MySQL to be ready..."
          until sudo docker exec mysql mysqladmin ping -h "${{secrets.SERVER_HOST}}" --silent; do
            echo "Waiting for database connection..."
            sleep 2
          done

      - name: Check and create database in MySQL
        run: |
          echo "Checking if database exists..."
          DB_EXISTS=$(sudo docker exec mysql mysql -uroot -p${{secrets.MYSQL_ROOT_PASSWORD}} -sse "SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME='node43'")
          if [ -z "$DB_EXISTS" ]; then
            echo "Database does not exist. Creating database..."
            sudo docker exec mysql mysql -uroot -p${{secrets.MYSQL_ROOT_PASSWORD}} -e "CREATE DATABASE node43;"
          else
            echo "Database already exists. Skipping creation."
          fi
      - name: Create .env file with environment variables
        run: |
          echo "Creating .env file..."
          cat <<EOF > node43_ci_cd/.env
          DATABASE_URL=${{secrets.DATABASE_URL}}
          SALT_OR_ROUNDS=${{secrets.SALT_OR_ROUNDS}}
          SECRET_KEY=${{secrets.SECRET_KEY}}
          EXPIRES_IN=${{secrets.EXPIRES_IN}}
          EOF
      - name: Build Docker image and create container for source BE
        run: |
          cd node43_ci_cd/.github/workflows
          sudo chmod +x ./build_be.sh
          ./build_be.sh

